# Generated by Django 2.0 on 2018-04-25 15:03

import accounts.managers
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into admin of site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('is_confirmed', models.BooleanField(default=False, help_text='The user has confirmed the account. If this option is not selected - the account can be re-registered.', verbose_name='Confirmed')),
                ('token', models.CharField(blank=True, max_length=32, null=True, verbose_name='Confirm token')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when the user was registered.', verbose_name='Date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo')),
                ('first_name', models.CharField(max_length=64, null=True, verbose_name='First name')),
                ('middle_name', models.CharField(max_length=64, null=True, verbose_name='Middle name')),
                ('last_name', models.CharField(max_length=64, null=True, verbose_name='Last name')),
                ('phone', models.CharField(max_length=64, null=True, verbose_name='Phone')),
                ('position', models.CharField(max_length=64, null=True, verbose_name='Position')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='City')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'verbose_name': 'group',
                'proxy': True,
                'indexes': [],
                'verbose_name_plural': 'Groups',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
